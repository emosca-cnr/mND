% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_ND.R
\name{run_ND}
\alias{run_ND}
\title{Network diffusion}
\usage{
run_ND(
  X0 = NULL,
  W = NULL,
  alpha = 0.7,
  nMax = 10000,
  eps = 1e-06,
  BPPARAM = NULL
)
}
\arguments{
\item{X0}{matrix or a list of matrices (if X0 was permuted (see 'perm_X0' function), where the first element of the list is the one obtained with real data); each column (layer) of the matrix X0 is a score vector over all vertices of G.}

\item{W}{matrix; symmetrically normalized adjacency matrix W = D^-1 A D^-1, see 'normalize_adj_mat' function}

\item{alpha}{numeric; the smothing factor}

\item{nMax}{numeric; maximum number of iterations}

\item{eps}{numeric; the iteration will stop when the maximum difference between matrix Xs between two consecutive iteraction is smaller than \code{eps}}

\item{BPPARAM}{optional BiocParallelParam instance determining the parallel back-end to be used during evaluation. If NULL, parallel evaluation is disabled using SerialParam(). See ?bplapply.}
}
\value{
a matrix or a list of matrices (if data were permuted) with network diffusion scores.
}
\description{
Network diffusion: input scores (X0) are smoothed by network-diffusion, obtaining the corresponding network-constrained scores Xs.
}
