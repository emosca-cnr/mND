[{"path":"/articles/mND.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"mND: Gene relevance based on multiple evidences in complex networks.","text":"document describes R package mND (Di Nanni et al. 2019), new network diffusion based method integrative multi-omics analysis.","code":""},{"path":"/articles/mND.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"mND: Gene relevance based on multiple evidences in complex networks.","text":"package can installed within R:","code":"install.packages(c(\"devtools\", \"igraph\")) devtools::install_github(\"emosca-cnr/mND\", build_vignettes = TRUE) library(mND)"},{"path":"/articles/mND.html","id":"definition-of-the-input-matrices","dir":"Articles","previous_headings":"","what":"Definition of the input matrices","title":"mND: Gene relevance based on multiple evidences in complex networks.","text":"analysis requires following inputs: \\(\\mathbf{W}\\), \\(N \\times N\\) normalized adjacency matrix, represents interactions genes, e.g.: \\(\\mathbf{X}_0\\), \\(N \\times m\\) matrix column vectors contain gene-related quantities, e.g.: IMPORTANT: two matrices must defined identifiers; normalization adjacency matrix must done means function NPATools::normalize_adj_mat(), requires symmetric binary adjacency matrix; relevance genes corresponding rows \\(\\mathbf{X}_0\\) proportional values, , higher better; negative values allowed.","code":"## 5 x 5 sparse Matrix of class \"dgCMatrix\" ##              A1BG        A2M A4GALT A4GNT AAAS ## A1BG   .          0.01022807      .     .    . ## A2M    0.01022807 .               .     .    . ## A4GALT .          .               .     .    . ## A4GNT  .          .               .     .    . ## AAAS   .          .               .     .    . ##                L1         L2 ## A1BG   0.00000000 0.00000000 ## A2M    0.02857143 8.96179484 ## A4GALT 0.00000000 1.55085417 ## A4GNT  0.00000000 0.00000000 ## AAAS   0.00000000 0.05228165 ## AACS   0.00000000 1.22029740 ## AADAT  0.00000000 1.90713768 ## AAK1   0.00000000 0.15747190 ## AAMP   0.00000000 0.56363846 ## AANAT  0.00000000 0.00000000"},{"path":"/articles/mND.html","id":"case-study-integration-of-mutation-and-expression-changes-in-breast-cancer","dir":"Articles","previous_headings":"","what":"Case study: integration of mutation and expression changes in breast cancer","title":"mND: Gene relevance based on multiple evidences in complex networks.","text":"proof principle, mND applied find functionally related genes basis gene mutations (\\(L_1\\)) gene expression variation (\\(L_2\\)) breast cancer (BC). Somatic mutations gene expression data matched tumour-normal samples (blood SM solid tissue GE) collected Cancer Genome Atlas (TCGA) (Tomczak et al. 2015) BC, using R package TCGAbiolinks (Colaprico et al. 2015) considering human genome version 38 (hg38). Mutation Annotation Format files obtained 4 pipelines: Muse (Fan et al. 2016), Mutect2 (Cibulskis et al. 2013), SomaticSniper (Larson et al. 2011), Varscan2 (Koboldt et al. 2012). mutation sites detected least two variant callers considered. Gene mutation frequencies (\\(f\\)) calculated fraction subjects gene associated least one mutation. Gene expression data obtained using TCGA workflow ``HTSeq-Counts’’. R package limma (Ritchie et al. 2015) used normalize quantify differential expression matched tumor-normal samples, yielding log-fold changes, corresponding p-values FDRs (BH method). obtained normalized adjacency matrix (\\(W\\)) using interactions available STRING (Szklarczyk et al. 2015), \\(X0\\) matrix defined two column vectors: \\(x_1 = f\\) \\(x_2 = -log_{10}(FDR)\\).","code":""},{"path":"/articles/mND.html","id":"permutations","dir":"Articles","previous_headings":"","what":"Permutations","title":"mND: Gene relevance based on multiple evidences in complex networks.","text":"set \\(k\\) permutations can created using two functions NPATools perm_vertices() perm_X0(): ’s X0_perm look like:","code":"vert_deg <- setNames(rowSums(sign(W)), rownames(W)) perms <- perm_vertices(vert_deg, method = \"d\", k = 99, cut_par = 9, bin_type = \"number\") X0_perm <- perm_X0(X0, perms = perms) ## [[1]] ##                L1         L2 ## A1BG   0.00000000 0.00000000 ## A2M    0.02857143 8.96179484 ## A4GALT 0.00000000 1.55085417 ## A4GNT  0.00000000 0.00000000 ## AAAS   0.00000000 0.05228165 ## AACS   0.00000000 1.22029740 ##  ## [[2]] ##        L1         L2 ## A1BG    0  0.8572643 ## A2M     0  0.3011823 ## A4GALT  0  1.5670347 ## A4GNT   0  0.0000000 ## AAAS    0  0.2135351 ## AACS    0 13.2177268 ##  ## [[3]] ##        L1          L2 ## A1BG    0 13.76818832 ## A2M     0  0.04274783 ## A4GALT  0  0.00000000 ## A4GNT   0  0.95558990 ## AAAS    0  0.39716219 ## AACS    0  2.83201647"},{"path":"/articles/mND.html","id":"network-diffusion-nd","dir":"Articles","previous_headings":"","what":"Network Diffusion (ND)","title":"mND: Gene relevance based on multiple evidences in complex networks.","text":"Next, run ND list permutations X0_perm. can time-consuming, ’s good idea run parallel: ’s \\(Xs\\) look like:","code":"BPPARAM <- MulticoreParam(4) Xs <- run_ND(X0 = X0_perm, W=W, BPPARAM = BPPARAM) ## [[1]] ## 6 x 2 sparse Matrix of class \"dgCMatrix\" ##                 L1       L2 ## A1BG   0.002673605 2.124002 ## A2M    0.012289714 5.677907 ## A4GALT 0.001611545 1.421157 ## A4GNT  0.004937741 1.129887 ## AAAS   0.002960363 2.692766 ## AACS   0.001881384 1.844737 ##  ## [[2]] ## 6 x 2 sparse Matrix of class \"dgCMatrix\" ##                  L1       L2 ## A1BG   0.0016064812 2.150362 ## A2M    0.0030956274 2.597173 ## A4GALT 0.0033493021 1.633948 ## A4GNT  0.0007315544 1.116432 ## AAAS   0.0026187676 2.287970 ## AACS   0.0013791022 5.615316 ##  ## [[3]] ## 6 x 2 sparse Matrix of class \"dgCMatrix\" ##                  L1       L2 ## A1BG   0.0028715207 6.257685 ## A2M    0.0033531495 2.999654 ## A4GALT 0.0027329278 1.220188 ## A4GNT  0.0009566958 1.400646 ## AAAS   0.0032222772 2.285644 ## AACS   0.0014454559 2.526037"},{"path":"/articles/mND.html","id":"calculation-of-mnd-score-and-significance-assessment","dir":"Articles","previous_headings":"","what":"Calculation of mND score and significance assessment","title":"mND: Gene relevance based on multiple evidences in complex networks.","text":"Let’s use function neighbour_index retrieve list gene neighbors indexes adjacency matrix: Now, can apply mND function find functionally related genes basis \\(x_1^*\\) \\(x_2^*\\) top \\(k\\) neighbours; precomputed mND scores (calculated \\(k = 3\\)) included mND package data (.e. data(mND_score)). value \\(k\\) can optimised exploring effect values around 3 ranked gene list provided mND output (see optimize_k function). Empirical \\(p\\)-values calculated using pool \\(r\\) permuted versions \\(X0\\): obtain list following data frames","code":"ind_adj <- neighbour_index(W) mND_score <- mND(Xs = Xs, ind_adj = ind_adj, k=3, BPPARAM = BPPARAM) mND_score <- signif_assess(mND_score, BPPARAM = BPPARAM) ## $mND ##                mND          p       mNDp       fdr ## FAM3C    0.1094030 0.07843137 0.12094609 0.3867690 ## VTI1B    0.1477348 0.03921569 0.20779496 0.2453133 ## MAGED2   0.1432691 0.01960784 0.24464204 0.2575517 ## CLU      0.1790824 0.03921569 0.25188654 0.1717788 ## SERPINA3 0.1060675 0.17647059 0.07990357 0.4032586 ## APOOL    0.1211439 0.09803922 0.12218573 0.3336046 ##  ## $t ##                 t1        t2 ## FAM3C    0.1346339 0.4650260 ## VTI1B    0.1346339 0.4650260 ## MAGED2   0.1346339 0.4650260 ## CLU      0.1806586 0.4878134 ## SERPINA3 0.1346339 0.4650260 ## APOOL    0.1346339 0.4650260 ##  ## $pl ##                  t1         t2 ## FAM3C    0.07843137 0.01960784 ## VTI1B    0.13725490 0.01960784 ## MAGED2   0.07843137 0.01960784 ## CLU      0.01960784 0.01960784 ## SERPINA3 0.07843137 0.01960784 ## APOOL    0.11764706 0.01960784 ##  ## $tp ##                tp1       tp2 ## FAM3C    0.1488391 0.7940646 ## VTI1B    0.1161180 0.7940646 ## MAGED2   0.1488391 0.7940646 ## CLU      0.3084872 0.8329755 ## SERPINA3 0.1488391 0.7940646 ## APOOL    0.1251313 0.7940646"},{"path":"/articles/mND.html","id":"gene-classification","dir":"Articles","previous_headings":"","what":"Gene classification","title":"mND: Gene relevance based on multiple evidences in complex networks.","text":"Lastly, let’s classify genes every layer. define set high scoring genes : \\(H_1\\): genes mutation frequency greater zero; \\(H_2\\): top 1200 differentially expressed genes (FDR < \\(10^-7\\)). , set cardinalities gene sets \\(N_1\\) \\(N_2\\), containing genes highest scoring neighborhoods, \\(|H_1|=|N_1|\\) \\(|H_2|=|N_2|\\): classification computed follows:","code":"Hl <- list(l1 = rownames(X0[X0[, 1]>0, ]), l2 = names(X0[order(X0[,2], decreasing = T), 2][1:1200])) top_Nl <- lengths(Hl) class_res <- classification(mND = mND_score, X0 = X0, Hl = Hl, top = top_Nl) ## $gene_class ##        L1 L2 ## TP53    I  L ## TRIM28  M NS ## CCNB1   M  M ## RPS27A  M  L ## UBA52   M  L ## CCNA2   L  M ##  ## $occ_labels ##          I   L   M  NS ## TP53   0.5 0.5 0.0 0.0 ## TRIM28 0.0 0.0 0.5 0.5 ## CCNB1  0.0 0.0 1.0 0.0 ## RPS27A 0.0 0.5 0.5 0.0 ## UBA52  0.0 0.5 0.5 0.0 ## CCNA2  0.0 0.5 0.5 0.0"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ettore Mosca. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nanni D, Noemi, Gnocchi, Matteo, Moscatelli, Marco, Milanesi, Luciano, Mosca, Ettore (2020). “Gene relevance based multiple evidences complex networks.” Bioinformatics, 36(3), 865–871. doi: 10.1093/bioinformatics/btz652.","code":"@Article{,   title = {Gene relevance based on multiple evidences in complex networks},   author = {Di Nanni and {Noemi} and {Gnocchi} and {Matteo} and {Moscatelli} and {Marco} and {Milanesi} and {Luciano} and {Mosca} and {Ettore}},   journal = {Bioinformatics},   year = {2020},   volume = {36},   number = {3},   pages = {865–871},   doi = {10.1093/bioinformatics/btz652}, }"},{"path":"/index.html","id":"network-analysis-of-multi-omics-data","dir":"","previous_headings":"","what":"Gene relevance based on multiple evidences in complex networks","title":"Gene relevance based on multiple evidences in complex networks","text":"mND uses multi-layer Network Diffusion find gene networks contain high scoring genes. requires two “layers” genome-wide scores interactome.  image : https://academic.oup.com/bioinformatics/article/36/3/865/5553095 Documentation: https://emosca-cnr.github.io/mND Source code: https://github.com/emosca-cnr/mND Citation: Di Nanni N, Gnocchi M, Moscatelli M, Milanesi L Mosca E, Gene relevance based multiple evidences complex networks, Bioinformatics, Volume 36, Issue 3, 1 February 2020, Pages 865–871, https://doi.org/10.1093/bioinformatics/btz652 Contact: Ettore Mosca, Bioinformatics Lab, CNR-ITB","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Gene relevance based on multiple evidences in complex networks","text":"package requires series R packages, available CRAN github. cases, following instructions guarantee dependencies installed: {r, eval=FALSE} install.packages(\"devtools\") devtools::install_github(\"emosca-cnr/NPATools\") devtools::install_github(\"emosca-cnr/dmfind\") devtools::install_github(\"emosca-cnr/mND\", build_vignettes = TRUE) case, please follow instruction R environment manually install missing packages.","code":""},{"path":"/reference/A.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjacency matrix — A","title":"Adjacency matrix — A","text":"Adjacency matrix","code":""},{"path":"/reference/A.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjacency matrix — A","text":"","code":"A"},{"path":"/reference/A.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Adjacency matrix — A","text":"matrix","code":""},{"path":"/reference/ND.html","id":null,"dir":"Reference","previous_headings":"","what":"Network diffusion — ND","title":"Network diffusion — ND","text":"Network diffusion: input scores (X0) smoothed network-diffusion, obtaining corresponding network-constrained scores Xs.","code":""},{"path":"/reference/ND.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network diffusion — ND","text":"","code":"ND(X0, W, alpha = 0.7, nMax = 10000, eps = 1e-06, cores = 1)"},{"path":"/reference/ND.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network diffusion — ND","text":"X0 matrix list matrices (X0 permuted (see 'perm_X0' function), first element list one obtained real data); column (layer) matrix X0 score vector vertices G. W matrix; symmetrically normalized adjacency matrix W = D^-1 D^-1, see 'normalize_adj_mat' function alpha numeric; smothing factor nMax numeric; maximum number iterations eps numeric; iteration stop maximum difference matrix Xs two consecutive iteraction smaller eps cores numeric; number cores run parallel case permutations","code":""},{"path":"/reference/ND.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network diffusion — ND","text":"matrix list matrices (data permuted) network diffusion scores.","code":""},{"path":"/reference/ND_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Network Diffusion using — ND_s","title":"Network Diffusion using — ND_s","text":"Network Diffusion using","code":""},{"path":"/reference/ND_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network Diffusion using — ND_s","text":"","code":"ND_s(   X0,   W,   alpha = 0.7,   nMax = 10000,   eps = 1e-06,   final.smooth = FALSE,   all.steps = FALSE,   verbose = FALSE )"},{"path":"/reference/ND_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network Diffusion using — ND_s","text":"X0 matrix composed column vectors initial distribution information W symmetrically normalized adjacency matrix W = D^-1 D^-1, see 'normalize_adj_mat' function alpha numeric, smothing factor nMax numeric, maximum number iterations eps numeric, iteration stop maximum difference matrix Xs two consecutive iteraction smaller eps final.smooth TRUE/FALSE, whether final step smoothing .steps, TRUE/FALSE, whether store steps verbose, TRUE/FALSE","code":""},{"path":"/reference/ND_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network Diffusion using — ND_s","text":"list : Xt smoothed matrix; eps see ; max.abs.diff max(abs(F_t) - abs(F_t-1)); Xs.transient Xs matrices.","code":""},{"path":"/reference/X0.html","id":null,"dir":"Reference","previous_headings":"","what":"X0, BC data — X0","title":"X0, BC data — X0","text":"X0, BC data","code":""},{"path":"/reference/X0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"X0, BC data — X0","text":"","code":"X0"},{"path":"/reference/X0.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"X0, BC data — X0","text":"data.frame","code":""},{"path":"/reference/X0_perm.html","id":null,"dir":"Reference","previous_headings":"","what":"X0_perm, BC data permutated — X0_perm","title":"X0_perm, BC data permutated — X0_perm","text":"X0_perm, BC data permutated","code":""},{"path":"/reference/X0_perm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"X0_perm, BC data permutated — X0_perm","text":"","code":"X0_perm"},{"path":"/reference/X0_perm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"X0_perm, BC data permutated — X0_perm","text":"list matrix","code":""},{"path":"/reference/Xs.html","id":null,"dir":"Reference","previous_headings":"","what":"Xs, BC data diffused — Xs","title":"Xs, BC data diffused — Xs","text":"Xs, BC data diffused","code":""},{"path":"/reference/Xs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Xs, BC data diffused — Xs","text":"","code":"Xs"},{"path":"/reference/Xs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Xs, BC data diffused — Xs","text":"matrix","code":""},{"path":"/reference/calc_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of p values — calc_p","title":"Estimation of p values — calc_p","text":"Estimation p values","code":""},{"path":"/reference/calc_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of p values — calc_p","text":"","code":"calc_p(X)"},{"path":"/reference/calc_p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of p values — calc_p","text":"X list matrices, first one obtained real data","code":""},{"path":"/reference/calc_p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of p values — calc_p","text":"p pvalue","code":""},{"path":"/reference/class_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification plot — class_plot","title":"Classification plot — class_plot","text":"Visulation classification","code":""},{"path":"/reference/class_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification plot — class_plot","text":"","code":"class_plot(classification_mat = NULL, directory = NULL, n = NULL)"},{"path":"/reference/class_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification plot — class_plot","text":"classification_mat data.frame; see 'classification' function directory string; output directory n numeric; number top n genes ranked mND plot","code":""},{"path":"/reference/classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene classification — classification","title":"Gene classification — classification","text":"Gene classification: genes classified every layer","code":""},{"path":"/reference/classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene classification — classification","text":"","code":"classification(mND, X0, Hl, top = NULL, alpha = NULL)"},{"path":"/reference/classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene classification — classification","text":"mND mND scores; data permuted use output 'signif_assess' function, otherwise output 'mND' function X0 matrix; initial score matrix X0, column (layer) represents score vector vertices G Hl list; defined user, composed high scoring genes names layer X0. top array; number genes highest neighbourhoods define gene set Nl (see ); 1 number layer. alpha array; significance level empirical p-value define gene set Nl (see ); 1 number layer.","code":""},{"path":"/reference/classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene classification — classification","text":"list : gene_class: data.frame classifications gene every layers. possible classification : M (Module); L (Linker); (Isolated); NS (Significant); occ_labels: occurrence different labels (M; L; ; NS) gene across layers.","code":""},{"path":"/reference/classification.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gene classification — classification","text":"gene set Nl contains genes highest neighbourhoods layer l. 'top' 'alpha' provided, maximum top genes p < alpha considered.","code":""},{"path":"/reference/eval_k.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluation of the parameter k — eval_k","title":"Evaluation of the parameter k — eval_k","text":"Evaluation parameter k","code":""},{"path":"/reference/eval_k.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluation of the parameter k — eval_k","text":"","code":"eval_k(mND = NULL, X0 = NULL, G = NULL, top = 200)"},{"path":"/reference/eval_k.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluation of the parameter k — eval_k","text":"mND list; list mND score obtained different k values, list components named k values used X0 matrix; initial score matrix X0, column (layer) represents score vector vertices G G graph; gene x gene undirected interaction graph top numeric; number genes considered top list genes ranked mND","code":""},{"path":"/reference/eval_k.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluation of the parameter k — eval_k","text":"list calculation w varying k plot results.","code":""},{"path":"/reference/extract_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction and plotting of connected subnetworks from a graph and a set of selected vertices — extract_module","title":"Extraction and plotting of connected subnetworks from a graph and a set of selected vertices — extract_module","text":"Extraction plotting connected subnetworks  graph set selected vertices","code":""},{"path":"/reference/extract_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction and plotting of connected subnetworks from a graph and a set of selected vertices — extract_module","text":"","code":"extract_module(   graph = NULL,   selectedVertices = NULL,   res_table = NULL,   minSubnetSize = 2 )"},{"path":"/reference/extract_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction and plotting of connected subnetworks from a graph and a set of selected vertices — extract_module","text":"graph igraph object selectedVertices subset vertices res_table result table minSubnetSize minimum size subnetwork","code":""},{"path":"/reference/extract_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction and plotting of connected subnetworks from a graph and a set of selected vertices — extract_module","text":"subnetwork","code":""},{"path":"/reference/framework_mND.html","id":null,"dir":"Reference","previous_headings":"","what":"mND global function — framework_mND","title":"mND global function — framework_mND","text":"calculates permutations X0 (r parameter used), applies network-diffusion data, computes mND score relative empirical p-value (data permuted). Outputs function can used classify genes layer classification function.","code":""},{"path":"/reference/framework_mND.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mND global function — framework_mND","text":"","code":"framework_mND(   X0 = NULL,   W = NULL,   alpha = 0.7,   nMax = 10000,   eps = 1e-06,   k = 3,   r = 0,   seed_n = NULL,   BPPARAM = NULL,   ... )"},{"path":"/reference/framework_mND.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mND global function — framework_mND","text":"X0 matrix; column (layer) matrix X0 score vector vertices G. W matrix; symmetrically normalized adjacency matrix W = D^-1 D^-1, see 'normalize_adj_mat' function alpha numeric; smothing factor nMax numeric; maximum number iterations eps numeric; iteration stop maximum difference matrix Xs two consecutive iteraction smaller eps k numeric; number top k first neighbors r numeric; number permutations seed_n numeric; given 'seed_n' determine permutations X0 ensures reproducibility analysis BPPARAM optional BiocParallelParam instance determining parallel back-end used evaluation. NULL, parallel evaluation disabled using SerialParam(). See ?bplapply. ... additional parameter NPATools::perm_vertices()","code":""},{"path":"/reference/framework_mND.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mND global function — framework_mND","text":"list : mND: mND score (mND); r parameter used, following columns added: corrisponding empirical p-value (p), product mND score -log10(p) (mNDp) t: sum top k first neighbours pl: corrisponding empirical p-values (t), r parameter used tp: product sum top k neighbours (t) -log10(pl), r parameter used","code":""},{"path":"/reference/ind_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"ind_adj,  index of neighbour for each genes using STRING interactome — ind_adj","title":"ind_adj,  index of neighbour for each genes using STRING interactome — ind_adj","text":"ind_adj,  index neighbour genes using STRING interactome","code":""},{"path":"/reference/ind_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ind_adj,  index of neighbour for each genes using STRING interactome — ind_adj","text":"","code":"ind_adj"},{"path":"/reference/ind_adj.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ind_adj,  index of neighbour for each genes using STRING interactome — ind_adj","text":"list","code":""},{"path":"/reference/k_results.html","id":null,"dir":"Reference","previous_headings":"","what":"k_results, results of eval_k function — k_results","title":"k_results, results of eval_k function — k_results","text":"k_results, results eval_k function","code":""},{"path":"/reference/k_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"k_results, results of eval_k function — k_results","text":"","code":"k_results"},{"path":"/reference/k_results.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"k_results, results of eval_k function — k_results","text":"list","code":""},{"path":"/reference/mND.html","id":null,"dir":"Reference","previous_headings":"","what":"mND score — mND","title":"mND score — mND","text":"Calculation mND score","code":""},{"path":"/reference/mND.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mND score — mND","text":"","code":"mND(Xs = NULL, ind_adj = NULL, k = 3, BPPARAM = NULL, min.norm.val = 0)"},{"path":"/reference/mND.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mND score — mND","text":"Xs matrix list matrices (X0 permuted, first element list one obtained real data) network diffusion scores, see 'ND' function ind_adj list; index neighbours obtained adjacency matrix, see 'neighbour_index' function k numeric; number top k first neighbors BPPARAM optional BiocParallelParam instance determining parallel back-end used evaluation. NULL, parallel evaluation disabled using SerialParam(). See ?bplapply. min.norm.val normalized ND values value set 0; useful denoise steady state ND focus highest scores","code":""},{"path":"/reference/mND.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mND score — mND","text":"list : mND: mND score t: sum top k neighbours data permuted (therefore Xs list), output list described reported permutation Xs.","code":""},{"path":"/reference/mND_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"mND demo data — mND_demo","title":"mND demo data — mND_demo","text":"mND demo data","code":""},{"path":"/reference/mND_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mND demo data — mND_demo","text":"","code":"mND_demo"},{"path":"/reference/mND_demo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"mND demo data — mND_demo","text":"list","code":""},{"path":"/reference/mND_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Integration with mND function — mND_s","title":"Integration with mND function — mND_s","text":"Integration mND function","code":""},{"path":"/reference/mND_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integration with mND function — mND_s","text":"","code":"mND_s(output = NULL, ind_adj = NULL, k = NULL, min.norm.val = 0)"},{"path":"/reference/mND_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integration with mND function — mND_s","text":"output Xs ind_adj index neighbours obtained adj matrix, see 'neighbour_index' function k number top k first neighbors min.norm.val normalized ND values value set 0; useful denoise steady state ND focus highest scores","code":""},{"path":"/reference/mND_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integration with mND function — mND_s","text":"list : mND: mND score t: sum top k neighbours","code":""},{"path":"/reference/mND_score.html","id":null,"dir":"Reference","previous_headings":"","what":"mND_score, output of mND — mND_score","title":"mND_score, output of mND — mND_score","text":"mND_score, output mND","code":""},{"path":"/reference/mND_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mND_score, output of mND — mND_score","text":"","code":"mND_score"},{"path":"/reference/mND_score.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"mND_score, output of mND — mND_score","text":"list","code":""},{"path":"/reference/neighbour_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Index neighbours — neighbour_index","title":"Index neighbours — neighbour_index","text":"Indices neighbours gene","code":""},{"path":"/reference/neighbour_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index neighbours — neighbour_index","text":"","code":"neighbour_index(W = NULL)"},{"path":"/reference/neighbour_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index neighbours — neighbour_index","text":"W matrix; symmetrically normalized adjacency matrix W = D^-1 D^-1, see 'normalize_adj_mat' function","code":""},{"path":"/reference/neighbour_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index neighbours — neighbour_index","text":"list indices neighbours gene","code":""},{"path":"/reference/normalize_adj_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Symmetric Normalization of Adjancency Matrix — normalize_adj_mat","title":"Symmetric Normalization of Adjancency Matrix — normalize_adj_mat","text":"Symmetric Normalization Adjancency Matrix","code":""},{"path":"/reference/normalize_adj_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Symmetric Normalization of Adjancency Matrix — normalize_adj_mat","text":"","code":"normalize_adj_mat(A)"},{"path":"/reference/normalize_adj_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Symmetric Normalization of Adjancency Matrix — normalize_adj_mat","text":"adjacency matrix","code":""},{"path":"/reference/normalize_adj_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Symmetric Normalization of Adjancency Matrix — normalize_adj_mat","text":"normalized adjacency matrix","code":""},{"path":"/reference/normalize_adj_mat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Symmetric Normalization of Adjancency Matrix — normalize_adj_mat","text":"function applies following normalization: a_ij' = a_ij / sqrt(d_i d_j), d_i degree vertex ","code":""},{"path":"/reference/omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Omega — omega","title":"Omega — omega","text":"Calculation omega function","code":""},{"path":"/reference/omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Omega — omega","text":"","code":"omega(G, u)"},{"path":"/reference/omega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Omega — omega","text":"G graph; gene x gene undirected interaction graph u list; ranked names V(G)$name","code":""},{"path":"/reference/optimize_k.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization of k value — optimize_k","title":"Optimization of k value — optimize_k","text":"Optimization 'k' value selecting value yields connected networks enriched initial scores.","code":""},{"path":"/reference/optimize_k.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization of k value — optimize_k","text":"","code":"optimize_k(   Xs = NULL,   X0 = NULL,   k = NULL,   ind_adj = NULL,   W = NULL,   top = 200,   BPPARAM = NULL )"},{"path":"/reference/optimize_k.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization of k value — optimize_k","text":"Xs matrix list matrices (X0 permuted, first element list one obtained real data) network diffusion scores, see 'ND' function X0 matrix; initial score matrix X0, column (layer) represents score vector vertices G k array; array k values ind_adj list; index neighbours obtained adjacency matrix, see 'neighbour_index' function W matrix; symmetrically normalized adjacency matrix W = D^-1 D^-1, see 'normalize_adj_mat' function top numeric; number genes considered top list genes ranked mND BPPARAM optional BiocParallelParam instance determining parallel back-end used evaluation. NULL, parallel evaluation disabled using SerialParam(). See ?bplapply.","code":""},{"path":"/reference/optimize_k.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimization of k value — optimize_k","text":"list calculation w varying k plot results.","code":""},{"path":"/reference/perm_X0.html","id":null,"dir":"Reference","previous_headings":"","what":"Permutation of X0 — perm_X0","title":"Permutation of X0 — perm_X0","text":"Permutation input matrix X0","code":""},{"path":"/reference/perm_X0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permutation of X0 — perm_X0","text":"","code":"perm_X0(X0, r, W, seed_n = NULL)"},{"path":"/reference/perm_X0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permutation of X0 — perm_X0","text":"X0 matrix; score matrix X0, column (layer) score vector vertices G. r numeric; number permutations. W matrix; symmetrically normalized adjacency matrix W = D^-1 D^-1, see 'normalize_adj_mat' function seed_n optional numeric; specify seed (pseudo) random number generation; using seed","code":""},{"path":"/reference/perm_X0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permutation of X0 — perm_X0","text":"list permutations X0 (first element list one obtained real data)","code":""},{"path":"/reference/plot_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot results — plot_results","title":"Plot results — plot_results","text":"Visualization results.","code":""},{"path":"/reference/plot_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot results — plot_results","text":"","code":"plot_results(   mND = NULL,   classification = NULL,   W = NULL,   n = NULL,   directory = NULL )"},{"path":"/reference/plot_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot results — plot_results","text":"mND mND scores; data permuted use output 'signif_assess' function, otherwise output 'mND' function. classification data.frame; gene classification, output 'classification' function W matrix; symmetrically normalized adjacency matrix W = D^-1 D^-1, see 'normalize_adj_mat' function n numeric; number top n ranking genes consider plot gene networks directory string; output directory","code":""},{"path":"/reference/plot_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot results — plot_results","text":"possible plots : genes ranked mND score corresponding p-value (permutated data): mND argument required (output 'signif_assess' function); gene networks composed top n ranking genes: mND, W n arguments required; gene classification top 100 ranking genes across layers: classification argument required. Legend: brown: isolated; orange: linker; purple: module; grey: significant.","code":""},{"path":"/reference/run_ND.html","id":null,"dir":"Reference","previous_headings":"","what":"Network diffusion — run_ND","title":"Network diffusion — run_ND","text":"Network diffusion: input scores (X0) smoothed network-diffusion, obtaining corresponding network-constrained scores Xs.","code":""},{"path":"/reference/run_ND.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network diffusion — run_ND","text":"","code":"run_ND(   X0 = NULL,   W = NULL,   alpha = 0.7,   nMax = 10000,   eps = 1e-06,   BPPARAM = NULL )"},{"path":"/reference/run_ND.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network diffusion — run_ND","text":"X0 matrix list matrices (X0 permuted (see 'perm_X0' function), first element list one obtained real data); column (layer) matrix X0 score vector vertices G. W matrix; symmetrically normalized adjacency matrix W = D^-1 D^-1, see 'normalize_adj_mat' function alpha numeric; smothing factor nMax numeric; maximum number iterations eps numeric; iteration stop maximum difference matrix Xs two consecutive iteraction smaller eps BPPARAM optional BiocParallelParam instance determining parallel back-end used evaluation. NULL, parallel evaluation disabled using SerialParam(). See ?bplapply.","code":""},{"path":"/reference/run_ND.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network diffusion — run_ND","text":"matrix list matrices (data permuted) network diffusion scores.","code":""},{"path":"/reference/signif_assess.html","id":null,"dir":"Reference","previous_headings":"","what":"Significance assessment — signif_assess","title":"Significance assessment — signif_assess","text":"Significance assessment: empirical p-values calculated using pool r permuted versions X0 (clearly, use function 'perm_X0' function used).","code":""},{"path":"/reference/signif_assess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Significance assessment — signif_assess","text":"","code":"signif_assess(mND = NULL, BPPARAM = NULL)"},{"path":"/reference/signif_assess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Significance assessment — signif_assess","text":"mND list; output 'mND' function BPPARAM optional BiocParallelParam instance determining parallel back-end used evaluation. NULL, parallel evaluation disabled using SerialParam(). See ?bplapply.","code":""},{"path":"/reference/signif_assess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Significance assessment — signif_assess","text":"list : mND: mND score (mND), corrisponding empirical p-value (p), product mND score -log10(p) (mNDp) t: sum top k first neighbours pl: corrisponding empirical p-values (t) tp: product sum top k neighbours (t) -log10(pl)","code":""}]
